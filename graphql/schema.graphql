type Query {
  getProcessingResult(id: ID!): ProcessingResult @aws_iam @aws_api_key
  listProcessingResults(
    limit: Int
    nextToken: String
  ): ProcessingResultConnection @aws_api_key
}

type Mutation {
  startProcessing(input: StartProcessingInput!): ProcessingResult
    @aws_iam
    @aws_api_key
  generateImageResponse(input: ProcessingResultInput): ProcessingResult
    @aws_iam
    @aws_api_key
}

type Subscription {
  onGeneratedImageResponse: ProcessingResult
    @aws_api_key
    @aws_subscribe(mutations: ["generateImageResponse"])
}

type GeneratedImageResponse @aws_iam @aws_api_key {
  base64Images: [String!]!
}

input StartProcessingInput @aws_iam @aws_api_key {
  id: ID
  imageKey: String!
  processingType: String!
}

input ProcessingResultInput @aws_iam @aws_api_key {
  id: ID!
  imageKey: String
  status: ProcessingStatus!
  presigned_url:String!
  resultUrl: String!
  processingType: String!
}

type ProcessingResult @aws_iam @aws_api_key {
  id: ID!
  imageKey: String!
  status: ProcessingStatus!
  presigned_url:String!
  resultUrl: String!
  processingType: String!

}

type ProcessingResultConnection @aws_api_key {
  items: [ProcessingResult]
  nextToken: String
}

enum ProcessingStatus @aws_iam @aws_api_key {
  PENDING
  PROCESSING
  COMPLETED
  FAILED
}

schema {
  query: Query
  mutation: Mutation
  subscription: Subscription
}
