type Query {
  getImageList(nextToken: String): ImageListsResult! @aws_api_key
}

type Mutation {
  generateImageResponse(input: ProcessingResultInput!): ProcessingResult
    @aws_iam
    @aws_api_key

  text2Image(input: String!): Boolean @aws_api_key
  text2Video(input: String!): Boolean @aws_api_key
}

type Subscription {
  onGeneratedImageResponse: ProcessingResult
    @aws_api_key
    @aws_subscribe(mutations: ["generateImageResponse"])
}

type ImageLists @aws_api_key {
  id: String!
  contentType: String!
  imageListString: [ImageItem!]!
}

type ImageItem @aws_api_key {
  prompt: String!
  fileName: String!
  presigned_url: String!
}

type ImageListsResult @aws_api_key {
  items: [ImageLists!]!
  nextToken: String
}

input ProcessingResultInput {
  id: ID!
  imageKey: String
  status: ProcessingStatus!
  presigned_url: String!
  resultUrl: String!
  processingType: String!
}

type ProcessingResult @aws_api_key @aws_iam {
  id: ID!
  imageKey: String!
  status: ProcessingStatus!
  presigned_url: String!
  resultUrl: String!
  processingType: String!
}

enum ProcessingStatus {
  PENDING
  PROCESSING
  COMPLETED
  FAILED
}

schema {
  query: Query
  mutation: Mutation
  subscription: Subscription
}
